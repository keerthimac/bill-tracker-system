package com.keerthimac.bill_tracker_system.dto;

import jakarta.validation.Valid;
import jakarta.validation.constraints.NotBlank; // Added for billNumber as it's usually mandatory
import jakarta.validation.constraints.NotEmpty; // Added for items list as a bill usually has items
import jakarta.validation.constraints.NotNull;
import lombok.Data; // Ensures getters, setters, etc., are generated by Lombok

import java.time.LocalDate;
import java.util.List;

@Data // This Lombok annotation is crucial for generating getSupplierId(), setSupplierId(), etc.
public class PurchaseBillRequestDTO {

    @NotBlank(message = "Bill number cannot be blank")
    private String billNumber;

    @NotNull(message = "Bill date cannot be null")
    private LocalDate billDate;

    @NotNull(message = "Supplier ID cannot be null")
    private Long supplierId; // This field, when present with @Data, generates getSupplierId()

    @NotNull(message = "Site ID cannot be null")
    private Long siteId;

    // We'll assume billImagePath is handled by a separate upload mechanism later
    // and not directly part of this initial creation DTO payload for simplicity.

    @NotEmpty(message = "A bill must have at least one item.")
    @Valid // This ensures that validation annotations within BillItemRequestDTO are also checked
    private List<BillItemRequestDTO> items;

    // Note: Fields like totalAmount, overallGrnStatus, grnHardcopy statuses are typically
    // not part of the request DTO for creating a new bill as they are derived or set by the system.
}
